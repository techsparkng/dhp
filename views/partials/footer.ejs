</div>
<!-- container-scroller -->

<!-- plugins:js -->
<script src="/assets/vendors/js/vendor.bundle.base.js"></script>
<script src="/assets/vendors/js/vendor.bundle.addons.js"></script>
<!-- endinject -->
<!-- Plugin js for this page-->
<!-- End plugin js for this page-->
<!-- inject:js -->
<script src="/assets/js/off-canvas.js"></script>
<script src="/assets/js/misc.js"></script>
<!-- endinject -->
<!-- Custom js for this page-->
<script src="/assets/js/dashboard.js"></script>
<script src="/moment-business-days/index.js"></script>
<!-- End custom js for this page-->
<% if (path === '/dashboard/') { %>
<script>
  var investorPackages = [], partnerPackages = [], internationalPackages = [];
  $.getJSON('/user/activePackages')
    .done(packages => {
      packages.forEach(package => {
        if (package.investtype === "Investor") {
          investorPackages.push(package);
        } else if (package.investtype === "Partner") {
          partnerPackages.push(package);
        } else {
          internationalPackages.push(package);
        }
      })
    })
    .fail(err => console.log(err));

    $('#package_plan').on("change", function () {
      var package = $(this).find('option:selected').val();
      $("#packages").parent().removeClass('d-none');

      if (package === "investor") {
        $("#packages").html('<option value="">- Select Active Package -</option>');
        investorPackages.forEach(package => {
          $("#packages").append(
            `<option class="${package._id}">&#8358;${package.amountDeposited} - ${moment(package.start).format('MM/DD/YYYY')}</option>`
            )
          var currentEarning = moment().diff(moment(package.start), 'days') * package.interest / 100 * package.amountDeposited;
          $(`option.${package._id}`).data({earnings: Math.round(currentEarning), capital: Math.round(package.amountDeposited)});
        })
      }

      if (package === "partner") {
        $("#packages").html('<option value="">- Select Active Package -</option>');
        partnerPackages.forEach(package => {
          $("#packages").append(
            `<option class="${package._id}">&#8358;${package.amountDeposited} - ${moment(package.start).format('MM/DD/YYYY')}</option>`
            )
          var currentEarning = moment().diff(moment(package.start), 'days') * package.interest / 100 * package.amountDeposited;
          $(`option.${package._id}`).data({earnings: Math.round(currentEarning), capital: Math.round(package.amountDeposited)});
        })
      }
    });

    $('#packages').on("change", function () {
      $("#capital").html(`&#8358;${$(this).find('option:selected').data("capital")}`)
      $("#earnings").html(`&#8358;${$(this).find('option:selected').data("earnings")}`)
    })
</script>
<% } %>
<% if (path === '/user/withdraw') { %>
<script>
  var investorPackages = [], partnerPackages = [], internationalPackages = [];

  $.getJSON('/user/activePackages')
    .done(packages => {
      packages.forEach(package => {
        if (package.investtype === "Investor") {
          investorPackages.push(package);
        } else if (package.investtype === "Partner") {
          partnerPackages.push(package);
        } else {
          internationalPackages.push(package);
        }
      })
    })
    .fail(err => console.log(err));

  $('#package_plan').on("change", function () {
    var package = $(this).find('option:selected').val();
    $("#packages").removeClass('d-none');
    if (package === "investor") {
      $("#packages tbody").html('');
      var counter = 1;
      investorPackages.forEach(package => {
        var currentEarning = package.remainder + moment().diff(moment(package.lastWithdraw), 'days') * package.interest / 100 * package.amountDeposited;
        $("#packages tbody").append(
          `
                <tr id="${package._id}">
                  <td>${counter}</td>
                  <td class="d-none package">${package._id}</td>
                  <td>${package.investtype}</td>
                  <td>${package.amountDeposited}</td>
                  <td>${moment(package.start).format('MM-DD-YYYY')}</td>
                  <td>${moment(package.nextWithdraw).format('MM-DD-YYYY')}</td>
                  <td>${moment(package.end).format('MM-DD-YYYY')}</td>
                  <td>${package.interest}% Daily</td>
                  <td class="currEarning">${currentEarning}</td>
                  <td><button class="btn btn-success btn-xs withdrawTrigger" disabled>Withdraw</button></td>
                </tr>
              `
        )

        $(`tr#${package._id} td.currEarning`).data({earning: currentEarning});

        if (moment().isAfter(moment(package.nextWithdraw))) {
          $(`tr#${package._id} button.withdrawTrigger`).removeAttr("disabled");
        }

        counter++;
      })
    }

    if (package === "partner") {
      $("#packages tbody").html('');
      var counter = 1;
      partnerPackages.forEach(package => {
        var currentEarning = Math.round(package.remainder + moment().diff(moment(package.lastWithdraw), 'days') * package.interest / 100 * package.amountDeposited);
        $("#packages tbody").append(
          `
                <tr id="${package._id}">
                  <td>${counter}</td>
                  <td class="d-none package">${package._id}</td>
                  <td>${package.investtype}</td>
                  <td>${package.amountDeposited}</td>
                  <td>${moment(package.start).format('MM-DD-YYYY')}</td>
                  <td>${moment(package.nextWithdraw).format('MM-DD-YYYY')}</td>
                  <td>${moment(package.end).format('MM-DD-YYYY')}</td>
                  <td>${package.interest}</td>
                  <td class="currEarning">${currentEarning}</td>
                  <td><button class="btn btn-success btn-xs withdrawTrigger" disabled>Withdraw</button></td>
                </tr>
              `
        )

        $(`tr#${package._id} td.currEarning`).data({earning: currentEarning});

        if (moment().isAfter(moment(package.nextWithdraw))) {
          $(`tr#${package._id} button.withdrawTrigger`).removeAttr("disabled");
        }

      })
    }
  })

  $('#packages').on("click", "button.withdrawTrigger:enabled", function () {
    $('#curEarning').val($(this).parent().siblings("td.currEarning").data("earning"));
    $('#package').val($(this).parent().siblings("td.package").text());
    $('#withdrawalModal').modal();
  })

  $('#withdrawAmount').on('keydown keyup', function (e) {
    var max = Number($('#curEarning').val());
    if ($(this).val() > max && e.keyCode !== 46 && e.keyCode !== 8) {
      e.preventDefault();
      $(this).val(max);
    }
  });
</script>
<% } %>
</body>

</html>